
name: Run Face Detection with Unusual_faces.py

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write  # allow committing back to the repository

jobs:
  run-face-detection:
    runs-on: ubuntu-latest
    # Prevent loops: don't run the heavy job again on the bot's own commit
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure full history for commits

      - name: üì• Download artifacts from Unusual_7download.yml
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: Unusual_7download.yml   # or Unusual_7download
          workflow_conclusion: success
          branch: main
          name: downloaded-videos
          path: Final_Videos/

      - name: üîé List downloaded files
        run: |
          echo "Contents of Final_Videos/:"
          ls -R Final_Videos || true

      - name: üêç Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install opencv-python mediapipe

      - name: üîß Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          ffmpeg -version

      - name: ‚ñ∂Ô∏è Run Unusual_faces.py
        env:
          VIDEO_DIR: Final_Videos          # ensure script looks in correct dir
          TIMELINE_DIR: Timeline           # ensure output goes here
        run: |
          mkdir -p Timeline
          python Unusual_faces.py
          echo "Generated Timeline contents:"
          ls -R Timeline || true

      # === New: Commit Timeline results into repo ===
      - name: üóÉÔ∏è Copy Timeline into repository directory
        run: |
          TARGET_DIR="Unuusual_memory/NO_FACE_TIMELINE"
          mkdir -p "$TARGET_DIR"
          # Clean existing contents (if you prefer to append, remove the rm line)
            # Use shopt nullglob to avoid literal * if empty
          shopt -s nullglob
          rm -rf "$TARGET_DIR"/*
          shopt -u nullglob
          cp -r Timeline/* "$TARGET_DIR"/ || true
          echo "Final contents of $TARGET_DIR:"
          ls -R "$TARGET_DIR" || true

      - name: üìù Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
            # Use your username/email if you prefer:
            # git config user.name "YourName"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage changes
          git add -A

          # Commit only if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update NO_FACE_TIMELINE results [skip ci]"
            git push origin HEAD:main
            echo "Changes committed and pushed."
          fi
