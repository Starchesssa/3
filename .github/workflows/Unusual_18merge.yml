
name: Process Videos

on:
  workflow_dispatch:

jobs:
  process_videos:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Process Videos
      run: |
        mkdir -p Final_Videos Temp_Segments
        for audio in Unuusual_memory/AUDIO_REAL/group_*.wav; do
          base=$(basename "$audio" .wav)
          video="Processed_Vid/${base}.mp4"
          noface="Unuusual_memory/NO_FACE/${base}.txt"
          if [ -f "$video" ] && [ -f "$noface" ]; then
            seg_num=1
            while IFS= read -r line; do
              start=$(echo "$line" | awk -F'-' '{print $1}' | tr -d ' ')
              end=$(echo "$line" | awk -F'-' '{print $2}' | awk -F':' '{print $1 ":" $2}')
              ffmpeg -y -ss "$start" -to "$end" -i "$video" -c copy "Temp_Segments/${base}_seg_${seg_num}.mp4"
              echo "file '${base}_seg_${seg_num}.mp4'" >> "Temp_Segments/${base}_concat_list.txt"
              seg_num=$((seg_num + 1))
            done < "$noface"

            # Concatenate segments inside Temp_Segments directory
            (
              cd Temp_Segments
              ffmpeg -y -f concat -safe 0 -i "${base}_concat_list.txt" -c copy "${base}_merged.mp4"
            )

            # Trim or pad video to match audio duration
            audio_dur=$(ffprobe -i "$audio" -show_entries format=duration -v quiet -of csv="p=0")
            ffmpeg -y -i "Temp_Segments/${base}_merged.mp4" -t "$audio_dur" -c:v copy -an "Temp_Segments/${base}_trimmed.mp4"

            # Merge trimmed video with audio
            ffmpeg -y -i "Temp_Segments/${base}_trimmed.mp4" -i "$audio" -map 0:v -map 1:a -c:v copy -c:a aac -shortest "Final_Videos/${base}.mp4"
          fi
        done

    - name: Upload Final Videos as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Final_Videos
        path: Final_Videos/
