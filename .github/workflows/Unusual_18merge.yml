
name: Merge Audio and Video (Unusual Memory)

on:
  workflow_dispatch:

jobs:
  merge-audio-video:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download processed video artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: Unusual_6download3.yml
          workflow_conclusion: success
          branch: main
          name: downloaded-videos
          path: Processed_Vid/

      - name: List downloaded video files
        run: ls -lh Processed_Vid/

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Merge audio with video (match group_X.wav with group_X.mp4)
        run: |
          mkdir -p Final_Videos
          for audio in Unuusual_memory/AUDIO_REAL/group_*.wav; do
            base=$(basename "$audio" .wav)
            video="Processed_Vid/${base}.mp4"
            if [ -f "$video" ]; then
              audio_dur=$(ffprobe -i "$audio" -show_entries format=duration -v quiet -of csv="p=0")
              ffmpeg -y -ss 5 -i "$video" -t "$audio_dur" -c:v copy -an temp_video.mp4
              ffmpeg -y -i temp_video.mp4 -i "$audio" -map 0:v -map 1:a -c:v copy -c:a aac -shortest "Final_Videos/${base}.mp4"
            fi
          done

      - name: Create Intro and Outro Videos (random 10s clips from top videos)
        run: |
          mkdir -p Intro_Outro
          i=1
          for file in Processed_Vid/group_*.mp4; do
            dur=$(ffprobe -i "$file" -show_entries format=duration -v quiet -of csv="p=0")
            start=$(awk -v dur="$dur" 'BEGIN{srand(); print int(10 + rand() * (dur - 20))}')
            ffmpeg -y -ss "$start" -i "$file" -t 10 -c copy "Intro_Outro/clip_$i.mp4"
            i=$((i+1))
            [ $i -gt 8 ] && break
          done

          # Create concat lists for Intro and Outro
          printf "file 'Intro_Outro/clip_1.mp4'\nfile 'Intro_Outro/clip_2.mp4'\nfile 'Intro_Outro/clip_3.mp4'\nfile 'Intro_Outro/clip_4.mp4'\n" > intro_list.txt
          printf "file 'Intro_Outro/clip_5.mp4'\nfile 'Intro_Outro/clip_6.mp4'\nfile 'Intro_Outro/clip_7.mp4'\nfile 'Intro_Outro/clip_8.mp4'\n" > outro_list.txt

          ffmpeg -y -f concat -safe 0 -i intro_list.txt -c copy Intro_Outro/Intro.mp4
          ffmpeg -y -f concat -safe 0 -i outro_list.txt -c copy Intro_Outro/Outro.mp4

      - name: Add Intro and Outro to Final Videos
        run: |
          mkdir -p Completed_Videos
          for vid in Final_Videos/group_*.mp4; do
            printf "file 'Intro_Outro/Intro.mp4'\nfile '$vid'\nfile 'Intro_Outro/Outro.mp4'\n" > merge_list.txt
            ffmpeg -y -f concat -safe 0 -i merge_list.txt -c copy "Completed_Videos/$(basename "$vid")"
          done

      - name: List completed video files
        run: ls -lh Completed_Videos/

      - name: Upload Final Videos as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: completed-videos
          path: Completed_Videos/
